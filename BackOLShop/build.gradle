apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8

def jarBaseName = 'back-ol-shop'
def distributionFolder = 'back-ol-shop'
def configFiles = ['application.properties', 'logback.xml', 'ams-mls-lookup.sh'] as Set

jar {
    baseName = jarBaseName
    exclude configFiles
}

buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/libs-milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-milestone" }
}

/*configurations.all {
    exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    exclude group: "org.springframework.boot", module: "logback-classic"
}*/

dependencies {
    //Spring Boot
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-logging")
    //compile("org.springframework.boot:spring-boot-starter-log4j2")
    compile("org.springframework.boot:spring-boot-starter-web")

    //JSON
    compile("com.google.code.gson:gson")

    //MySQL Connector
    compile("mysql:mysql-connector-java")

    //test
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.mockito:mockito-all:1.9.5")
    testCompile("org.testng:testng:6.10")
    testCompile("org.assertj:assertj-core:3.6.2")
}

task copyFilesToPackage << {
    copy {
        //from('src/main/resources')
        from 'build/libs/' + jarBaseName + '.jar'
        into 'build/' + distributionFolder + '/lib'
    }

    copy {
        from('src/main/resources') {
            include configFiles
        }
        into 'build/' + distributionFolder
    }
}

task zipPackage(type: Zip, dependsOn: 'copyFilesToPackage') {
    from 'build/' + distributionFolder
    baseName distributionFolder
}

build.dependsOn zipPackage
zipPackage.mustRunAfter check