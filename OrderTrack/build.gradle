plugins {
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

def jarBaseName = 'order-track'
def distributionFolder = 'order-track'
def configFiles = [ 'application.properties', 'log4j2.xml', 'run.sh' ] as Set

jar {
    archivesBaseName = jarBaseName
    exclude configFiles
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    //SpringBoot
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-log4j2')

    //Excell
    implementation('org.apache.poi:poi:4.1.2')
    implementation('org.apache.poi:poi-ooxml:4.1.2')

    //URIBuilder
    implementation('org.apache.httpcomponents:httpclient:4.5.10')

    //Gson
    implementation('com.google.code.gson:gson:2.8.5')

    testImplementation('junit:junit:4.12')
}

task copyFilesToPackage {
    doLast {
        copy {
            from 'build/libs/' + jarBaseName + '.jar'
            into 'build/' + distributionFolder + '/lib'
        }

        copy {
            from('src/main/resources') {
                include configFiles
            }
            into 'build/' + distributionFolder
        }
    }
}

task zipPackage(type: Zip, dependsOn: 'copyFilesToPackage') {
    from 'build/' + distributionFolder
    archivesBaseName = distributionFolder
}

build.dependsOn zipPackage
zipPackage.mustRunAfter check